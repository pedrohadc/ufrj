class Matrix:
    def __init__(self, m, n, v):
        self.m = m
        self.n = n 
        self.v = v
        self.matrix = []
        self.l = []
        self.coef = self.v[:]
        for i in range(self.m):
            for j in range(self.n):
                if j == self.n - 1:
                    self.l.append(self.coef[j])
                    for x in range(self.n):
                        del self.coef[0]
                else:
                    self.l.append(self.coef[j])
            self.matrix.append(self.l)
            self.l = []
        
    def __repr__(self): return str(self.matrix)
        

a = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 1, 1, 1], [1, 1, 1, 1]]
b = [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 1, 1], [1, 1, 1, 1, 1]]

coef = []
sumn = 0
for i in range(len(a)):
    for j in range(len(b[0])):
        for n in range(len(a[0])):
            if n == len(a[0]) - 1:
                sumn = sumn + a[i][n]*b[n][j]
                coef.append(sumn)
                sumn = 0
            else: sumn = sumn + a[i][n]*b[n][j]
            
            
print(Matrix(len(a), len(b[0]), coef))
            
